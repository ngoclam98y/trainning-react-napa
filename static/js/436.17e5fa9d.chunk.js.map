{"version":3,"file":"static/js/436.17e5fa9d.chunk.js","mappings":"uPAGMA,EAAS,CACbC,WAAW,OAAD,OAASC,EAAT,eACVC,OAAQ,OACRC,eAAgB,SAGH,SAAS,IACtB,OAAO,SAAC,IAAD,CAAKC,KAAM,GAAIC,MAAON,I,+DCVlBO,EAAY,CACvB,CACEC,GAAI,IACJC,SAAU,UACVC,SAAU,gBCARV,EAAS,CACbW,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,UAGC,SAAS,IACtB,IAAMC,GAAaC,EAAAA,EAAAA,MAmBnB,OACE,SAAC,IAAD,CAAKX,KAAM,EAAGC,MAAON,EAArB,UACE,UAAC,IAAD,CACEM,MAAO,CAAEW,MAAO,OAChBC,KAAK,QACLC,SAAU,CAAEd,KAAM,IAClBe,WAAY,CACVf,KAAM,IAERgB,cAAe,CACbC,UAAU,GAEZC,SA7BW,SAACC,GAChB,GAAKjB,GAAcA,EAAUkB,OAA7B,CAIA,GAHelB,EAAUmB,MACvB,SAACC,GAAD,OAAOA,EAAElB,WAAae,EAAOf,UAAYkB,EAAEjB,WAAac,EAAOd,YAOjE,OADAkB,OAAOC,aAAaC,QAAQ,UAAWC,KAAKC,WAAU,IAC/CjB,EAAW,mBAJhBkB,EAAAA,GAAAA,MAAc,qCAwBZC,eAjBiB,SAACC,GACtBC,QAAQC,IAAI,UAAWF,IAiBnBG,aAAa,MAZf,WAcE,sDACA,SAAC,SAAD,CACEC,MAAM,iCACNrB,KAAK,WACLsB,aAAa,UACbC,MAAO,CACL,CACEC,UAAU,EACVT,QAAS,sDAPf,UAWE,SAAC,IAAD,CAAO3B,MAAO,CAAEH,OAAQ,OAAQwC,aAAc,YAGhD,SAAC,SAAD,CACEJ,MAAM,iCACNrB,KAAK,WACLsB,aAAa,cACbC,MAAO,CACL,CACEC,UAAU,EACVT,QAAS,sDAPf,UAWE,SAAC,aAAD,CAAgB3B,MAAO,CAAEH,OAAQ,OAAQwC,aAAc,YAGzD,SAAC,SAAD,CACEzB,KAAK,WACL0B,cAAc,UACdxB,WAAY,CACVf,KAAM,IAJV,UAOE,SAAC,IAAD,wEAEF,SAAC,SAAD,CACEe,WAAY,CACVf,KAAM,IAFV,UAKE,SAAC,IAAD,CACEwC,KAAK,UACLC,SAAS,SACTxC,MAAO,CACLW,MAAO,OACPd,OAAQ,OACRwC,aAAc,MACd1C,WAAY,UACZ8C,YAAa,WARjB,mDCtFV,IAAQC,EAAYC,EAAAA,EAAAA,QAEdjD,EAAS,CAAEG,OAAQ,OAAQQ,QAAS,QAE3B,SAAS,IACtB,OACE,UAACqC,EAAD,CAAS1C,MAAON,EAAhB,WACE,SAAC,EAAD,KACA,SAAC,EAAD,S,4CCVFiD,EAASC,EAAAA,GACbD,EAAOE,OAASA,EAAAA,GAChBF,EAAOG,OAASA,EAAAA,GAChBH,EAAOD,QAAUA,EAAAA,GACjBC,EAAOI,MAAQA,EAAAA,EACf","sources":["pages/Login/background.js","_mocks_/user.js","pages/Login/form.js","pages/Login/index.js","../node_modules/antd/es/layout/index.js"],"sourcesContent":["import { Col } from \"antd\";\r\nimport BackgroundLogin from \"../../assets/login.png\";\r\n\r\nconst styles = {\r\n  background: `url(${BackgroundLogin}) no-repeat`,\r\n  height: \"100%\",\r\n  backgroundSize: \"cover\",\r\n};\r\n\r\nexport default function () {\r\n  return <Col span={16} style={styles}></Col>;\r\n}\r\n","export const USER_DATA = [\r\n  {\r\n    id: \"1\",\r\n    username: \"ngoclam\",\r\n    password: \"ngoclam1998\",\r\n  },\r\n];\r\n","import { Button, Checkbox, Col, Form, Input, message } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { USER_DATA } from \"../../_mocks_/user\";\r\n\r\nconst styles = {\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n};\r\n\r\nexport default function () {\r\n  const navigation = useNavigate();\r\n\r\n  const onFinish = (values) => {\r\n    if (!USER_DATA && !USER_DATA.length) return;\r\n    const isUser = USER_DATA.some(\r\n      (x) => x.username === values.username && x.password === values.password\r\n    );\r\n    if (!isUser) {\r\n      message.error(\"username or password is wrong !\");\r\n      return;\r\n    }\r\n    window.localStorage.setItem(\"isLogin\", JSON.stringify(true));\r\n    return navigation(\"/dashboard/user\");\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Col span={8} style={styles}>\r\n      <Form\r\n        style={{ width: \"70%\" }}\r\n        name=\"basic\"\r\n        labelCol={{ span: 24 }}\r\n        wrapperCol={{\r\n          span: 24,\r\n        }}\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete=\"off\"\r\n      >\r\n        <h1>ログイン</h1>\r\n        <Form.Item\r\n          label=\"ユーザー名\"\r\n          name=\"username\"\r\n          initialValue=\"ngoclam\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your ユーザー名!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input style={{ height: \"40px\", borderRadius: \"5px\" }} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"パスワード\"\r\n          name=\"password\"\r\n          initialValue=\"ngoclam1998\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your パスワード!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input.Password style={{ height: \"40px\", borderRadius: \"5px\" }} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"remember\"\r\n          valuePropName=\"checked\"\r\n          wrapperCol={{\r\n            span: 24,\r\n          }}\r\n        >\r\n          <Checkbox>パースワードを保存</Checkbox>\r\n        </Form.Item>\r\n        <Form.Item\r\n          wrapperCol={{\r\n            span: 24,\r\n          }}\r\n        >\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"40px\",\r\n              borderRadius: \"5px\",\r\n              background: \"#FFA544\",\r\n              borderColor: \"#FFA544\",\r\n            }}\r\n          >\r\n            サインイン\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Col>\r\n  );\r\n}\r\n","import { Layout } from \"antd\";\r\nimport Background from \"./background\";\r\nimport FormLogin from \"./form\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst styles = { height: \"100%\", display: \"flex\" };\r\n\r\nexport default function () {\r\n  return (\r\n    <Content style={styles}>\r\n      <Background />\r\n      <FormLogin />\r\n    </Content>\r\n  );\r\n}\r\n","import InternalLayout, { Content, Footer, Header } from './layout';\nimport Sider from './Sider';\nvar Layout = InternalLayout;\nLayout.Header = Header;\nLayout.Footer = Footer;\nLayout.Content = Content;\nLayout.Sider = Sider;\nexport default Layout;"],"names":["styles","background","BackgroundLogin","height","backgroundSize","span","style","USER_DATA","id","username","password","display","flexDirection","justifyContent","alignItems","navigation","useNavigate","width","name","labelCol","wrapperCol","initialValues","remember","onFinish","values","length","some","x","window","localStorage","setItem","JSON","stringify","message","onFinishFailed","errorInfo","console","log","autoComplete","label","initialValue","rules","required","borderRadius","valuePropName","type","htmlType","borderColor","Content","Layout","InternalLayout","Header","Footer","Sider"],"sourceRoot":""}